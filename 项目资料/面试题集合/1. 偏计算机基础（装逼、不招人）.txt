记录一次腾讯Go开发岗位面试经过
 Go /  869 /  16 / 发布于 6个月前 / 更新于 6个月前

跳槽看机会是每个职场人的必经之路，笔者也是个俗人，加上公司领导也是对人不对事的，于是在猎头的怂恿下，我就有了想试试的冲动，毕竟闭门造车是兵家大忌。而事实证明，确实如此。我们没有用到微服务，没有高并发，没有什么值得拿出手的技术亮点。惭愧，想要拿高薪，还要继续学习才是。于是面试完之后我赶紧记录一下，起码知道自己改学习的方向有哪些。作为一个只有两年后端经验的小白，面试完之后就只有一个想法，不容易啊。

先记录下面试问的问题：

1、谈一下Go的GC机制

2、说下三色标记算法的原理

3、算法：判断链表是否有回环

4、介绍下自己的项目

5、开发的流程规范是什么？

6、半连接是什么？

7、粘包是什么？怎么发送的？

8、怎么创建索引

9、怎么避免缓存击穿，还有其他的什么方法吗？

10、go的mutx怎么使用，乐观和悲观锁分别怎么实现，使用场景是什么？

11、服务器受到攻击怎么定位服务器问题？

12、rpc的具体实现

13、怎么反转树的左右节点

14、谈谈epoll和select

在问到第14个问题的时候，我直接放弃了，因为我知道接下来要问什么。面试造火箭，工作拧螺丝，这话一点不假。接下来肯定问区别和实现原理。在我放弃之后，我就请教了一下面试官，顺便验证一下我的猜想。面试官确实打算这么问。后面我就干脆问下，我该继续学习补充哪些知识点？面对这样的面试，我该怎么回答问题？面试官人还比较好，说回答问题要有深度和广度，一个问题要由此及彼的回答，并且和多语言之间进行对比。

惭愧的是，前十个问题我还知道，从第十一个问题开始我就不知道了。后面的操作系统和网络安全相关的，我就是个小白，更别谈实现原理了。搞GO的，一定要会微服务，不管你简历上有没有写这些技术。所以，同学们一定要研究这块，否则进大厂无缘了。大家加油！


     之所以不贴出答案，是因为我本人也是背书的，又有几个人是看源码就知道的呢对吧，都是看别人的文档，所以提倡去自己找答案，这样印象深刻，正如下面评论说的，不是工作用到的，谁会知道？就算背下了，不久也是会忘记的。我就说下面试过程和我的回答吧。

    一开始的面试就是不平等的，我必须开视频，人家不开视频，我对着屏幕上的自己回答问题。1、开始问GC，我直接回答：Go会定时进行GC清理操作，为了防止频繁的触发GC，在内存达到某个阈值的时候也会进行GC操作。可能回答的没达到他的预期，就打断了直接问2、三色标记算法，我回答的也简单：这是清除-标记算法的一种，在1.9之前版本，清除和标记都会进行STW，之后的版本为了减少STW的时间，采用异步清除，但是标记阶段还是会有STW。大致的原理是，轮询白色区域，有引用放入灰色，轮询灰色有引用放入黑色，黑色不进行轮询，所以为了加强数据的准确性Go添加了写屏障。面试官这时候就嗯了一句，就问了个算法，3、回环连表的判断这个刚好我做过有点印象：两个指针，分别是前指针和后指针，按照节点往下走，当前指针位置大于或者等于后指针的位置时就代表有回环。然后面试官又是嗯了一句就开始问项目相关的东西了。所以4和5都是根据简历上实际项目进行问的。可能因为项目中没有涉及到微服务，就没怎么往下问，就开始问网络相关的了，我估计半连接和粘包都是随口问问的，半连接是TCP三次握手的初始阶段出现的，粘包是长连接比较常见，但是我没回答完就下一个问题了。8、创建索引，我是直接说根据业务来实现，不能直接这么问吧，然后我就从B+树的结构说起，谈到了引擎和联合索引，覆盖索引以及回表的原因和过程。后面还问了一句：为什么mysql用B+树，我说这是产品特性问题，每个产品的侧重点不同，采用的算法也不用。MongoDB侧重单条记录，MySQL侧重遍历和数据关联，不过，看面试官的语气显然不是他要的结果。至于9、避免缓存击的其他方法，可以当redis获取为空的时候设置一个空串，但是没有互斥锁保险。乐观锁和悲观锁 的使用场景无非就是效率问题，时间相应短的需求就是乐观锁，稳定和保险采用悲观锁。再往后的问题，就是象征性的问吧，具体答案，我也没法贴，只能大家自己去找了，操作系统的东西，实在接触不上，时间短见效慢。待我有空再来一个一个解答。

     关于面试：对于一般的公司，基本只看工作年限。我去过高灯面试，开始写的是一年经验，过了初面，第二面的时候说相关经验时间太短，面试官面都没见到就让我离开了。第二次，我改成3年换个部门，这个复试倒是看到面试官了，但是说只能给个中级岗位。我在想要不要写成6年的后端开发经验，估计就会评一个高级的了。我也去过明源云面试，也是写的一年经验，但是，这个就有点悲催了，问的都是语言的新特性，甚至连多态和继承都问，这个面试官比较年轻，说想要个年纪小点的培养，我尼玛。。。面试这种事情，以前是三分天注定，七分靠打拼，现在怕啥反过来了，除了大厂的技术硬伤之外，其他的面试大家随缘就好不要强求，毕竟到哪都是坑，只是有的臭有点特别臭，仅此而已。欢迎吐槽，^_^！

===============
https://learnku.com/articles/51080






小赢科技电话面：
1、linux 进程的内存模型

上来就是这么一道题，我直接懵逼了。只能随口一说：代码区、数据区、堆区、栈区、未使用区。再问就是直接回答不知道。

2、对 10 亿数据进行去重

hash 分割，位图，稀疏数组。实现方式各有优劣。

3、redis 的 ZSet 底层数据结构实现原理，跳跃表如何确定插入数据的层级

这个问题，我开始并不知道。但是，我猜死了也不知道，是随机生成的，有个权值概率来决定的，数值越大生成的概率越低。

4、HTTP 是如何实现协议的？头和体怎么区分？

我说的是 key-value 区分的，头部和 body 位置不一样。不知道具体想问什么。

5、TCP 进行连接的时候，linux 中需要实现多少种方法？关联的方法有哪些？

只能说，客户端创建 socket、建立连接 connect、服务端创建 socket、绑定 bind、 监听 listen、接收信息 accept、发送 send 和接收 recv，最后关闭 close。

遗憾的是，并不满意，我也不知道面试官想要什么。

6、谈谈微服务

没做过，简历上写的也很清楚，经过上一次的腾讯面试，我还特意标注了，没有使用过微服务。结果还是问，说明，这面试官是来闹着玩的。

7、服务治理中做了些什么？

这是我特别想吐槽的地方，我只能说我知道一点概念，服务发现和熔断，以及服务注册和雪崩处理等等都是属于这个的范畴。然后就打算了我，直接问下一个。

8、HTTP 的状态有哪些分别代表什么？302 403 404 502

这个问题是唯一值得满心欢喜的，估计是看前面都不满意，问个 low 点的问题试探一下。

9、创建一个大内存，是堆还是栈？

堆。栈的默认大小只有 2M，存储一些函数变量，用完就释放，GC 的操作主要是堆里面进行。接着问了为什么这么设计，我表示我从没想过为什么。就连为什么取名为堆栈，我也没想过。

不知道大家注意到没有，全程没有问 Go 的任何一个问题。我表示，后端的开发都是不问语言的吗？我怕不是面了个假的面试。

深信服电话面试：
这个面试官就让我有点不明觉厉了，开始以为很牛逼，等你自己去寻找答案的时候，才发现，原来面试官连自己问的问题都不知道，说的答案也是错的。也就可以理解，为什么面试官不当场说答案，非要让你自己回去搜索了。

1、链表有环的判断，写伪代码

既然是电话面试，那就不是写伪代码，是说伪代码了。但是，链表不能用 for 循环吗？我说 for 和 while 都可以循环处理链表，我一度以为我傻逼了。

2、GPM 调度模型

这个除了背诵，没有别的法子，我说的他的一直说嗯嗯的，标识认同。说明，基本概念理论，大家一个水平线。

3、浏览器的前进后退使用的数据结构

这个，我开始有点懵逼，我说任何数据结构够可以实现，就是麻烦和简单的区别。然后说了栈，发现行不通，他提示说可以用两个栈。嗯，很认同这方法。

4、TCP 的三次握手，第一次握手的 ack 包含哪些信息，什么时候会有 Time_Wait

这个问题，让我彻底颠覆这个面试官了。开始我并不知道 ack，包含什么，我只知道需要消费掉一个序列号。他说里面包含了 ip 地址，我不明觉厉了。首先建立连接的第一次握手的，根本不是 ACK，而是 SYN。其次，ACK 是服务端返回给客户端的确认号，根本没有什么 IP 地址或者其他的什么信息。IP 只是在建立连接的开始使用，虽然全程都在，但是握手的时候我没找到说需要 IP，更没找到 ACK 还会含有 IP 信息。Time_Wait，只有在主动释放连接的时候才会有。

5、栈保存的是什么，堆呢？地址生长方向是什么？为什么这么设计？

栈的空间是由编译器进行开辟和释放，主要存放局部变量和函数参数。栈的地址方向，我不知道，我是推理的，我之前做过单片机，引脚的都是高位往低位处理。堆刚好和栈相反。至于为什么这么设计，这是由于大小端来决定的。开始我不知道，后面看资料才知道的。

6、Go 的栈大小是多少？最大值是多少？

这个我是真没注意过，一直以为是 2M，结果发现，不是网上说的 32M，而是一开始的 2K，后面会进行栈分裂，扩展栈的大小，换句话说，栈的大小是会变化的，最新版本的栈大小是从 2K-1G 变化的。

7、队列实现最优路径

不知道问什么，原来是迷宫地图，唉。

8、两个链表像拉链一样相交，获取这些交点

真不知道，到现在还没搜到答案。一个交点的可以知道，拉链一样的多个交点的，还真不知道。

9、后顺遍历树结构，如何释放树结构的内存信息

这个是我觉得唯一有水平的面试题，前面的后顺遍历已经铺垫好了，后面释放树结构内存也只能按照后顺遍历的方式来释放。

10、Linux 的网络拥堵如何排查，过程花多长时间

这个主要是想要花的时间。我表示，时间无法确定，我们也接触不到服务器，无法确定，只能协助。

11、TCP 连接，服务端发现丢包之后是怎么处理的？

我说重传。然后问了是立即重传还是做了其他什么处理再重传？经过上面的题，我很确定，这哥们肯定也不知道 ^_^

12、贪心算法

我就不信有几个人能写出来的，如果不是专业搞算法的。

13、队列如何保证先进先出，栈呢？

数组，索引，完全不知道怎么回答，最后说我回答跑题了。。。我想说，我连出题意图都没搞明白。

14、linux 权限控制是如何区分的？

不知道，不同的区域还是？唉。

最后问还有什么问题问他的。我就问了一个问题，你说的这些问题我要全部回答上来才行吗？他说，算法是加分项。然后我回顾了一下，嗯，他问的全是加分项。

————————————————
原文作者：棋布
转自链接：https://learnku.com/articles/52385
版权声明：著作权归作者所有。商业转载请联系作者获得授权，非商业转载请保留以上作者信息和原文链接。





